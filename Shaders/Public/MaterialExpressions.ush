// Copyright Â©XUKAI. All Rights Reserved.
// /Plugin/XkGamedevKit/Public/MaterialExpressions.ush
#pragma once

/**
 * Bend world position component z to make a spherical world
 */
// return XkSphericalWorldBending(CameraPosition, WorldPosition);
float3 XkSphericalWorldBending(float3 InCameraPosition, float3 InWorldPosition)
{
    float x = distance(InCameraPosition.xy, InWorldPosition.xy);
    const float a = -0.00001f;
    // min_quad_tree_size * 4.0f
    const float b = 6400.0f;
    // y = a * (x - b) ^ 2
    float y = pow(max(x - b, 0.0f), 2.0f) * a;
    return float3(0.0f, 0.0f, y);
}

/**
 * Extract packed normal from texture
 * return XkCanvasExtractPackedNormal(PackedRG);
 */
float3 XkCanvasExtractPackedNormal(float2 InPackedRG)
{
    float2 xy = InPackedRG * 2.0 - 1.0; // De-normalize
    float z = sqrt(1 - dot(xy, xy)); // Calculate z component
    float3 Normal = float3(xy, z); // Recover normal
    return normalize(Normal);
}